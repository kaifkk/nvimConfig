return {
	"mhartington/formatter.nvim",
	keys = {
		{ "<leader>f", "<cmd>Format<CR>" },
		{ "<leader>F", "<cmd>FormatWrite<CR>" },
	},
	config = function()
		-- Utilities for creating configurations
		local util = require("formatter.util")
        local c = require "formatter.defaults.clangformat"

		-- local function clang()
		-- 	function C()
		-- 		return {
		-- 			exe = "clang-format",
		-- 			args = {
		-- 				"-assume-filename",
		-- 				util.escape_path(util.get_current_buffer_file_name()),
		-- 			},
		-- 			stdin = true,
		-- 			try_node_modules = true,
		-- 		}
		-- 	end
		-- end

		-- Provides the Format, FormatWrite, FormatLock, and FormatWriteLock commands
		require("formatter").setup({
			-- Enable or disable logging
			logging = true,
			-- Set the log level
			log_level = vim.log.levels.WARN,
			-- All formatter configurations are opt-in
			filetype = {
				-- Formatter configurations for filetype "c" go here
				-- and will be executed in order
				c = {
					require("formatter.filetypes.c").clangformat,
                    c.Clang()
					-- clang(),
					-- function()
					-- 	return {
					-- 		exe = "clang-format",
					-- 		args = {
					-- 			"-assume-filename",
					-- 			util.escape_path(util.get_current_buffer_file_name()),
					-- 		},
					-- 		stdin = true,
					-- 		try_node_modules = true,
					-- 	}
					-- end,
				},
				-- Formatter configurations for filetype "cpp" go here
				-- and will be executed in order
				cpp = {
					require("formatter.filetypes.cpp").clangformat,
					function()
						return {
							exe = "clang-format",
							args = {
								"-assume-filename",
								util.escape_path(util.get_current_buffer_file_name()),
							},
							stdin = true,
							try_node_modules = true,
						}
					end,
				},
				-- Formatter configurations for filetype "lua" go here
				-- and will be executed in order
				lua = {
					-- "formatter.filetypes.lua" defines default configurations for the
					-- "lua" filetype
					require("formatter.filetypes.lua").stylua,

					-- You can also define your own configuration
					function()
						--   -- Supports conditional formatting
						-- if util.get_current_buffer_file_name() == "special.lua" then
						-- 	return nil
						-- end

						-- Full specification of configurations is down below and in Vim help
						-- files
						return {
							exe = "stylua",
							args = {
								"--search-parent-directories",
								"--stdin-filepath",
								util.escape_path(util.get_current_buffer_file_path()),
								"--",
								"-",
							},
							stdin = true,
						}
					end,
				},

				-- Use the special "*" filetype for defining formatter configurations on
				-- any filetype
				["*"] = {
					-- "formatter.filetypes.any" defines default configurations for any
					-- filetype
					require("formatter.filetypes.any").remove_trailing_whitespace,
				},
			},
		})
	end,
}
